# # Dockerfile

# # Gunakan image PHP-FPM resmi sebagai base image
# FROM php:8.2-fpm-alpine

# # Instal dependensi sistem yang dibutuhkan untuk ekstensi PHP
# # `libpq-dev` untuk pdo_pgsql
# # `libmysqlclient-dev` untuk pdo_mysql (jika tetap ingin menginstal)
# RUN apk add --no-cache postgresql-dev \
#     && docker-php-ext-install pdo_pgsql pdo_mysql \
#     && rm -rf /var/cache/apk/*

# # Salin semua kode aplikasi dari direktori lokal ke dalam container
# COPY . /var/www/html

# # Atur direktori kerja default di dalam container
# WORKDIR /var/www/html

# # Instal Composer
# COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
# RUN composer install --no-dev --optimize-autoloader

# # Atur izin file
# RUN chown -R www-data:www-data /var/www/html \
#     && chmod -R 755 /var/www/html

# # Mengubah PHP-FPM agar mendengarkan di semua interface
# # PATH INI SUDAH PASTI BENAR SEKARANG: /usr/local/etc/php-fpm.d/www.conf
# RUN sed -i 's/^listen = 127.0.0.1:8000/listen = 8000/' /usr/local/etc/php-fpm.d/www.conf

# # Expose port 8000
# EXPOSE 8000

# # Perintah default untuk menjalankan PHP-FPM
# CMD ["php-fpm"]

FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 8000

CMD ["node", "src/index.js"]
